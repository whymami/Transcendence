version: '3.8'

services:
  db:
    build:
      context: ./db
    image: postgres
    volumes:
      - ../db:/var/lib/postgresql/data
      - shared-data:/vault/token/
    depends_on:
      - vault
    networks:
      - app-network
    ports:
      - "5432:5432"
    environment:
      - VAULT_ADDR=http://vault:8300
      - VAULT_TOKEN_FILE=/vault/token/root_token.txt

  web:
    build: ./transback
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./transback:/app
      - ./transback/static:/app/static
      - ./transback/profile_pictures:/app/profile_pictures
      - ./transback/transbackend/templates:/app/templates
      - ./transback/locale:/app/locale
      - shared-data:/vault/token/
      - ssl-certs:/etc/nginx/ssl/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - vault
    networks:
      - app-network
    environment:
      - VAULT_ADDR=http://vault:8300
      - VAULT_TOKEN_FILE=/vault/token/root_token.txt

  nginx:
    build:
      context: ./nginx
    volumes:
      - ./front:/usr/share/nginx/html
      - ./transback/static:/static
      - ./transback/profile_pictures:/profile_pictures
      - ./nginx-logs/modsec:/var/log/modsec
      - ssl-certs:/etc/nginx/ssl/
      - shared-data:/vault/token/
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - vault
    networks:
      - app-network
    environment:
      - BACKEND=http://web:8000
      - VAULT_ADDR=http://vault:8300
      - VAULT_TOKEN_FILE=/vault/token/root_token.txt
    
  vault:
    build:
      context: ./vault
    cap_add:
      - IPC_LOCK
    volumes:
      - shared-data:/vault/token/
    env_file:
      - ./transback/.env
    ports:
      - "8300:8300"
    networks:
      - app-network
    environment:
      VAULT_ADDR: http://localhost:8300
    restart: on-failure

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  shared-data:
  ssl-certs:
